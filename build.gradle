apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'base'
apply plugin: 'sonar-runner'

project.sourceCompatibility = 1.8
project.targetCompatibility = 1.8
version = '1.0'
group = "eu.com.cwsfe.cassandra"
archivesBaseName = 'cassandra_test'
compileJava.options.encoding = 'UTF-8'
//compile.options.fork = true
//compile.options.forkOptions.executable = '/usr/java/latest/'

idea {
    module {
        sourceDirs += file('src/main/java')
        sourceDirs += file('src/main/resources')
        testSourceDirs += file('src/test/java')
        testSourceDirs += file('src/test/resources')
        excludeDirs += file('build')
        excludeDirs += file('out')
        excludeDirs += file('target')
        excludeDirs += file('.idea')
        inheritOutputDirs = true
        jdkName = '1.8'
        downloadJavadoc = true
    }
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-release" }
    maven { url "http://repo.springsource.org/plugins-release" }
    maven { url "http://repo.spring.io/milestone" }  // for AspectJ 1.8.0.M1
    maven { url "https://repository.apache.org/content/repositories/releases" }  // tomcat 8
    maven { url "https://maven.java.net/content/repositories/releases" }  // javax.websocket, tyrus
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }  // javax.cache
}

dependencies {
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: '2.0.1'
}

sonarRunner {
    def props = new Properties()
    def propertiesFile = new File("sensitive_data.properties")
    if (propertiesFile != null) {
        propertiesFile.withInputStream {
            stream -> props.load(stream)
        }
    }
    sonarProperties {
        property 'toolVersion', '2.4'
        property "sonar.host.url", props["sonar.host.url"]
        property "sonar.jdbc.url", props["sonar.jdbc.url"]
        property "sonar.jdbc.username", props["sonar.jdbc.username"]
        property "sonar.jdbc.password", props["sonar.jdbc.password"]
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.login", props["sonar.login"]
        property "sonar.password", props["sonar.password"]
    }
}
